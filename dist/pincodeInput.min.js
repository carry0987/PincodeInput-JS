!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).PincodeInput=t()}(this,(function(){"use strict";var e=Object.freeze({__proto__:null,reportError:function(...e){console.error(...e)},throwError:function(e){throw new Error(e)}});function t(e,t,n){if("string"!=typeof e)return e;let o=document;return null===t&&n?o=n:t&&t instanceof Node&&"querySelector"in t?o=t:n&&n instanceof Node&&"querySelector"in n&&(o=n),"all"===t?o.querySelectorAll(e):o.querySelector(e)}function n(e,t={},n=""){let o=document.createElement(e);for(let e in t)Object.prototype.hasOwnProperty.call(t,e)&&("textContent"===e||"innerText"===e?o.textContent=t[e]:o.setAttribute(e,t[e]));return n&&(o.textContent=n),o}function o(e,t){return e.classList.add(t),e}function s(e,t){return e.classList.remove(t),e}function i(e,t,n){return e.classList.toggle(t,n),e}let l="utils-style";const r={from:".utils",to:".utils-"};function c(e,...t){if(!t.length)return e;const n=t.shift();if(n)for(const t in n)if(Object.prototype.hasOwnProperty.call(n,t)){const s=n[t],i=t;"object"!=typeof(o=s)||null===o||Array.isArray(o)?e[i]=s:(e[i]&&"object"==typeof e[i]||(e[i]={}),c(e[i],s))}var o;return c(e,...t)}function a(e){l=e}function d(e,t){r.from=e,r.to=t}function u(e,t=null){t=f(t)?"":t;let o=n("style");o.id=l+t,o.textContent="",document.head.append(o);let s=o.sheet;for(let n in e)e.hasOwnProperty(n)&&h(s,n,p(e[n]),t)}function p(e){let t="";for(let[n,o]of Object.entries(e))n=n.replace(/([A-Z])/g,(e=>`-${e[0].toLowerCase()}`)),t+=`${n}:${o};`;return t}function h(e,t,n,o=null){o=f(o)?"":o;let s=t.replace(r.from,r.to+o);e.insertRule(s+"{"+n+"}",0)}function m(e=null){e=f(e)?"":e;let n=t("#"+l+e);n&&n.parentNode.removeChild(n)}function f(e){return"number"!=typeof e&&(!e||"string"==typeof e&&0===e.length)}class g{static throwError=e.throwError;static deepMerge=c;static setStylesheetId=a;static setReplaceRule=d;static injectStylesheet=u;static removeStylesheet=m;static getElem=t;static createElem=n;static addClass=o;static removeClass=s;static toggleClass=i;static isDigit(e){return/^\d$/.test(e)}static updateVisiblePinCode(e,t,n,o){const s=e.value;g.getElem(".pincode-grid span","all").forEach(((e,t)=>{e.textContent=o&&s[t]?o:s[t]||""})),t?.(e.value,e.value.length-1),e.value.length===e.maxLength&&n?.(e.value)}static buildStyles(e,t,n,o){let s={};const i=(e,n,o=!1)=>{let i=e.startsWith("::")?"":" ";e||(i="."+t),s[`span.pincodeInput${o?"."+t:""}${i}${e}`]=n};if("object"==typeof n&&"object"==typeof o)i(e,n),i(e,o,!0);else for(let[e,t]of Object.entries(n))i(e,t,!!e);return s}}g.setStylesheetId("pincodeInput-style"),g.setReplaceRule(".pincodeInput",".pincodeInput");const y={secure:!1,placeHolder:"â€¢",length:6,styles:{},onLoad:void 0,onInput:void 0,onComplete:void 0};class v{static instances=[];static version="1.0.2";element;options;_onInput=void 0;_onComplete=void 0;constructor(e,t={}){this.init(e,t),v.instances.push(this),1===v.instances.length&&((e,t=!1)=>{!0===t?console.log("Data Type : "+typeof e,"\nValue : "+e):"boolean"!=typeof t?console.log(t):console.log(e)})(`PincodeInput is loaded, version: ${v.version}`)}init(e,t){let n=g.getElem(e);n||g.throwError("Element not found"),n instanceof HTMLInputElement||g.throwError("Element must be an input field"),this.element=n,this.options=g.deepMerge({},y,t),this._onInput=t.onInput,this._onComplete=t.onComplete,this.options?.onLoad?.(),this.createPincodeGrids(v.instances.length)}createPincodeGrids(e){const t=this.options,n=this.element.maxLength>0?this.element.maxLength:t.length;let o={};t.styles&&Object.keys(t.styles).length>0&&(o=g.deepMerge({},t.styles,o)),o&&g.injectStylesheet(o,e.toString());const s=g.createElem("div");s.className="pincodeInput";const i=g.createElem("div");i.className="pincode";for(let e=0;e<n;e++){const t=g.createElem("div"),n=g.createElem("span");t.className="pincode-grid",t.dataset.index=e.toString(),t.appendChild(n),i.appendChild(t)}const l=this.element.parentElement,r=this.element.nextSibling;return l&&(l.removeChild(this.element),r?l.insertBefore(s,r):l.appendChild(s)),g.addClass(this.element,"pincode-input"),this.element.removeAttribute("hidden"),this.element.type=t.secure?"password":"text",this.element.pattern="[0-9]*",this.element.inputMode="numeric",this.element.maxLength=n,this.element.autocomplete="off",s.appendChild(this.element),s.appendChild(i),g.getElem(".pincode-grid","all",s).forEach((e=>{e.addEventListener("click",(()=>this.element.focus()))})),this.element.addEventListener("input",this.onPinInput.bind(this)),this.element.addEventListener("keydown",this.handleKeydown.bind(this)),this.element.addEventListener("focus",(()=>this.updateFocus())),this.element.addEventListener("blur",this.removeFocus.bind(this),!0),this}updateFocus(){const e=Array.from(g.getElem(".pincode-grid","all")),t=this.element.value.length;e.forEach(((e,n)=>{this.element.focus(),n===t?e.classList.add("pincode-focus"):e.classList.remove("pincode-focus")}))}removeFocus(){document.querySelectorAll(".pincode-grid").forEach((e=>{e.classList.remove("pincode-focus")}))}onPinInput(e){const t=e.target,n=this.options.secure?this.options.placeHolder:void 0;t.value.length<=t.maxLength?(g.updateVisiblePinCode(t,this._onInput,this._onComplete,n),this.updateFocus()):t.value=t.value.slice(0,t.maxLength)}handleKeydown(e){"Backspace"===e.key&&(this.handleBackspace(),e.preventDefault())}handleBackspace(){const e=this.element.value,t=this.options.secure?this.options.placeHolder:void 0;e.length>0&&(this.element.value=e.slice(0,e.length-1),g.updateVisiblePinCode(this.element,this._onInput,this._onComplete,t),this.updateFocus())}destroy(){let e=v.instances.indexOf(this);e<0?g.throwError("PincodeInput instance not found"):(g.removeStylesheet(e.toString()),this.element.remove(),v.instances.splice(e,1))}set onInput(e){this._onInput=e}set onComplete(e){this._onComplete=e}}return v}));
